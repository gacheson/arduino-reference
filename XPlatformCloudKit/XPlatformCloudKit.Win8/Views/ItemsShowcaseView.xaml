<common:LayoutAwarePage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:XPlatformCloudKit.Views"
    xmlns:common="using:XPlatformCloudKit.Common"
    xmlns:sampleData="using:XPlatformCloudKit.SampleData"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ViewModels="using:XPlatformCloudKit.ViewModels"
    xmlns:helpers="using:XPlatformCloudKit.Helpers"
    x:Name="pageRoot"
    x:Class="XPlatformCloudKit.Views.ItemsShowcaseView"
    mc:Ignorable="d"
    >

    <common:LayoutAwarePage.Resources>

    <common:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <helpers:ItemsShowcaseViewDataTemplateSelector x:Key="ItemsShowcaseViewDataTemplateSelector" />
        
        <!--
            Collection of grouped items displayed by this page, bound to a subset
            of the complete item list because items in groups cannot be virtualized
        -->
        <!--Replace d:Source... with the following to obtain data from the actual Azure Service-->
        <!--Source="{Binding ItemGroups, Source={d:DesignInstance IsDesignTimeCreatable=True, Type=ViewModels:ItemsShowcaseViewModel}}"-->
        <CollectionViewSource
            x:Name="groupedItemsViewSource"
            Source="{Binding ItemGroups}"
            d:Source="{Binding ItemGroups, Source={d:DesignInstance IsDesignTimeCreatable=True, Type=sampleData:ItemsShowcaseSampleData}}"
            IsSourceGrouped="True"
            />
    </common:LayoutAwarePage.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid x:Name="ShowcaseGrid" Style="{StaticResource LayoutRootStyle}">
        <!--<Grid.Background>
            <ImageBrush ImageSource="ms-appx:///Assets/Wallpaper.png"/>
        </Grid.Background>-->
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!--
                    The back button and title have different styles when snapped, and the list representation is substituted
                    for the grid displayed in all other view states
                -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>

                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="itemListView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ZoomedInItemGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ZoomedOutGroupGridView" Storyboard.TargetProperty="Visibility">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <SemanticZoom x:Name="semanticZoom" Grid.RowSpan="2">

            <SemanticZoom.ZoomedOutView>
                <GridView 
                    x:Name="ZoomedOutGroupGridView"
                    ScrollViewer.IsHorizontalScrollChainingEnabled="False"
                    SelectionMode="None"
			        IsSwipeEnabled="false" IsItemClickEnabled="True" >
                    <GridView.ItemTemplate>
                        <DataTemplate>
                            <Grid Height="250" Width="250">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="45"/> 
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock
                                Margin="6,0,12,0"
                                Text="{Binding Group.Key}"
                                TextTrimming="WordEllipsis"
                                FontSize="24"
                                Style="{StaticResource BasicTextStyle}"/>
                                <Image Source="{Binding Group[0].Image}" Grid.Row="1" />
                            </Grid>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapGrid ItemWidth="250" ItemHeight="250" MaximumRowsOrColumns="2" 
                                VerticalChildrenAlignment="Center" />
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.ItemContainerStyle>
                        <Style TargetType="GridViewItem">
                            <Setter Property="Margin" Value="4" />
                            <Setter Property="Padding" Value="10" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="VerticalContentAlignment" Value="Bottom" />
                        </Style>
                    </GridView.ItemContainerStyle>
                </GridView>
            </SemanticZoom.ZoomedOutView>

            <SemanticZoom.ZoomedInView>
                <!-- Put the GridView for the zoomed in view here. -->
                <!-- Horizontal scrolling grid used in most view states -->
                <GridView
			    ScrollViewer.IsHorizontalScrollChainingEnabled="False"
                x:Name="ZoomedInItemGridView"
			    AutomationProperties.AutomationId="ZoomedInItemGridView"
			    AutomationProperties.Name="Grouped Items"
			    Grid.RowSpan="2"
			    Padding="116,137,40,46"
			    ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
			    SelectionMode="None"
			    IsSwipeEnabled="false" IsItemClickEnabled="True"          
                helpers:ItemClickCommand.Command="{Binding ItemSelectedCommand}"
                ItemTemplateSelector="{StaticResource ItemsShowcaseViewDataTemplateSelector}" >

                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>
                    <GridView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <Grid Margin="1,0,0,6">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding Key}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                                <TextBlock Text="{StaticResource ChevronGlyph}" Visibility="Collapsed" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>
                                            </StackPanel>
                                    </Grid>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                            <GroupStyle.Panel>
                                <ItemsPanelTemplate>
                                    <VariableSizedWrapGrid Orientation="Vertical" Margin="0,0,80,0"/>
                                </ItemsPanelTemplate>
                            </GroupStyle.Panel>
                        </GroupStyle>
                    </GridView.GroupStyle>
                </GridView>

            </SemanticZoom.ZoomedInView>

        </SemanticZoom>

        <!-- Vertical scrolling list only used when snapped -->
        <ListView
			    x:Name="itemListView"
			    AutomationProperties.AutomationId="ItemListView"
			    AutomationProperties.Name="Grouped Items"
			    Grid.Row="1"
			    Visibility="Collapsed"
			    Margin="0,-10,0,0"
			    Padding="10,0,0,60"
			    ItemsSource="{Binding Source={StaticResource groupedItemsViewSource}}"
			    ItemTemplate="{StaticResource Standard80ItemTemplate}"
			    SelectionMode="None"
                helpers:ItemClickCommand.Command="{Binding ItemSelectedCommand}"
			    IsSwipeEnabled="false"
                IsItemClickEnabled="True"
                >

            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <Grid Margin="7,7,0,0">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Key}" Margin="3,-7,10,10" Style="{StaticResource GroupHeaderTextStyle}" />
                                        <!--<TextBlock Text="{StaticResource ChevronGlyph}" FontFamily="Segoe UI Symbol" Margin="0,-7,0,10" Style="{StaticResource GroupHeaderTextStyle}"/>-->
                                    </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
        </ListView>

        <ProgressRing IsActive="{Binding IsBusy}" Grid.Row="1" Foreground="{StaticResource ApplicationForegroundThemeBrush}" VerticalAlignment="Center" HorizontalAlignment="Center" Height="100" Width="100"/>


        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" IsEnabled="{Binding IsSearch}" Style="{StaticResource BackButtonStyle}" Command="{Binding ClearSearch, Mode=OneWay}" />
            <TextBlock x:Name="pageTitle" Text="{Binding ApplicationName}" Grid.Column="1" IsHitTestVisible="false" Style="{StaticResource PageHeaderTextStyle}"/>
            <Button x:Name="SearchButton" Visibility="Collapsed" AutomationProperties.Name="Search" Content="Search"  Command="{Binding SearchCommand, Mode=OneWay}" />
        </Grid>
    </Grid>
    <common:LayoutAwarePage.BottomAppBar>
        <AppBar>
            <Grid>
                <StackPanel x:Name="StandardBar" Orientation="Horizontal" HorizontalAlignment="Left">
                    <Button Style="{StaticResource AppBarButtonStyle}" AutomationProperties.Name="Refresh" Content=""  Command="{Binding RefreshCommand, Mode=OneWay}" />
                </StackPanel>
            </Grid>
        </AppBar>
    </common:LayoutAwarePage.BottomAppBar>
</common:LayoutAwarePage>
